version: "3.8"
services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - /var/lib/rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    env_file:
      - .env.production

    networks:
      - auth_production_network

  auth-production-database:
    image: mysql_image:latest
    container_name: ${AUTH_DATABASE_CONTAINER_NAME}
    restart: always
    ports:
      - ${AUTH_DATABASE_PORT}:${AUTH_DATABASE_PORT}
    env_file:
      - .env
    environment:
      - MYSQL_TCP_PORT=${AUTH_DATABASE_PORT}
      - MYSQL_ROOT_PASSWORD=${AUTH_DATABASE_ROOT_PASSWORD}
      - MYSQL_DATABASE=${AUTH_DATABASE_NAME}
      - MYSQL_USER=${AUTH_DATABASE_USER}
      - MYSQL_PASSWORD=${AUTH_DATABASE_PASSWORD}
    networks:
      - production_network
    volumes:
      - auth_mysql_data_isolated:/var/lib/mysql
    
  auth-production-app:
    image: auth_prod_app:latest
    container_name: ${AUTH_APP_CONTAINER_NAME}
    restart: no
    entrypoint: ["sh", "-c", "while ! npm run start:migrate:prod; do echo 'The database is not ready yet! Retrying after a delay...'; sleep ${AUTH_DATABASE_CONN_RETRY_DELAY:- 2}; done"]
    ports:
      - ${AUTH_APP_PORT}:${AUTH_APP_PORT}
    depends_on:
      - auth-production-database
    env_file:
      - .env
    networks:
      - auth_production_network
    
volumes:
  auth_mysql_data_isolated:
    driver: local

networks:
  auth_production_network:
